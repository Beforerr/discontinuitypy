# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../notebooks/missions/stereo/mag.ipynb.

# %% auto 0
__all__ = ['download_data', 'load_data', 'preprocess_data', 'process_data', 'create_pipeline']

# %% ../../../notebooks/missions/stereo/mag.ipynb 1
from datetime import timedelta

import polars as pl

from ...utils.cdf import cdf2pl
from ...utils.basic import pmap, resample, partition_data_by_year
from ...utils.polars import create_partitions
from ..default.data_mag import create_pipeline_template

from functools import partial

from typing import Dict, Iterable, Callable


# %% ../../../notebooks/missions/stereo/mag.ipynb 4
from pathlib import Path
import os

os.environ['SPEDAS_DATA_DIR'] = str(Path.home() / 'data')
import pyspedas

# %% ../../../notebooks/missions/stereo/mag.ipynb 5
def download_data(
    start,
    end,
    probe: str = "a",
    datatype = '8hz',
) -> Iterable[str]:
    "List of CDF files"
    trange = [start, end]
    files = pyspedas.stereo.mag(trange, probe=probe, datatype=datatype, downloadonly=True)
    return files


def load_data(
    start,
    end,
    datatype = '8hz',
    probe: str = "a",
):
    files = download_data(start, end, probe, datatype)
    var_names="BFIELD"
    return pl.concat(files | pmap(cdf2pl, var_names=var_names))


# %% ../../../notebooks/missions/stereo/mag.ipynb 7
def preprocess_data(
    raw_data,
    var_names="BFIELD"
):
    """
    Preprocess the raw dataset (only minor transformations)
    - Applying naming conventions for columns
    """
    load_func = partial(cdf2pl, var_names=var_names)

    return create_partitions(raw_data, load_func)

# %% ../../../notebooks/missions/stereo/mag.ipynb 9
def process_data(
    raw_data: Dict[str, Callable[..., pl.LazyFrame]],
    ts,  # time resolution, in seconds
):
    every = timedelta(seconds=ts)
    period = every

    data: pl.LazyFrame = pl.concat(
        resample(func(), every=every, period=period) for func in raw_data.values()
    )
    
    return data.unique("time").pipe(partition_data_by_year)    

# %% ../../../notebooks/missions/stereo/mag.ipynb 11
def create_pipeline(sat_id="STA", source="MAG"):
    return create_pipeline_template(
        sat_id=sat_id,
        source=source,
        load_data_fn=download_data,
        preprocess_data_fn=preprocess_data,
        process_data_fn=process_data,
    )
