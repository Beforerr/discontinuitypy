# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../notebooks/pipelines/1_data.ipynb.

# %% auto 0
__all__ = ['create_pipeline_template']

# %% ../../../notebooks/pipelines/1_data.ipynb 1
import polars as pl

from kedro.pipeline import Pipeline, node
from kedro.pipeline.modular_pipeline import pipeline

from typing import Any, Dict

# %% ../../../notebooks/pipelines/1_data.ipynb 13
from typing import Callable, Optional
from ...utils.basic import load_params

def create_pipeline_template(
    sat_id: str,  # satellite id, used for namespace
    source: str,  # source data, like "mag" or "plasma"
    check_dataype_fn: Callable,
    load_data_fn: Callable,
    preprocess_data_fn: Callable,
    process_data_fn: Callable,
    extract_features_fn: Optional[Callable] = None,
    **kwargs,
) -> Pipeline:

    params = load_params()
    sat_id = sat_id.upper()
    source = source.upper()
    
    namespace = f"{sat_id}.{source}"

    ts = params[sat_id][source]["time_resolution"]
    ts_str = f"ts_{ts}s"

    datatype = check_dataype_fn(ts)

    node_load_data = node(
        load_data_fn,
        inputs=dict(
            start="params:start_date",
            end="params:end_date",
            datatype=datatype,
        ),
        outputs="raw_data",
        name="load_data",
    )

    node_preprocess_data = node(
        preprocess_data_fn,
        inputs=dict(
            raw_data="raw_data",
        ),
        outputs=f"inter_data_{datatype}",
        name="preprocess_data",
    )

    node_process_data = node(
        process_data_fn,
        inputs=dict(
            raw_data=f"inter_data_{datatype}",
            ts="params:time_resolution",
        ),
        outputs=f"primary_data_{ts_str}",
        name="process_data",
    )
    
    nodes = [
        node_load_data,
        node_preprocess_data,
        node_process_data,
    ]

    pipelines = pipeline(
        nodes,
        namespace=namespace,
        parameters={
            "params:start_date": "params:jno_start_date",
            "params:end_date": "params:jno_end_date",
        },
    )

    return pipelines
