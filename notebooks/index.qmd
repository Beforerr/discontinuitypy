---
title: Discontinuities? Yes!
subtitle: 'All statistics are wrong, but some may be useful:)'
author:
  - name: Zijin Zhang
  - name: Anton Artemyev
  - name: Vassilis Angelopoulos
  - name: Shi Chen
  - name: Zesen Huang
output-file: index.html
bibliography: references.bib
execute: 
  eval: false
---

## Install

```{shell}
pip install ids-finder
```

## How to use

Import the package

```{python}
from ids_finder.utils.basic import *
from ids_finder.core import *
```

## Background

'Discontinuities' are discontinuous spatial changes in plasma parameters/characteristics and magnetic fields[@colburn1966].

### Importance

-   Contribution of Strong Discontinuities to the Power Spectrum

    > The strong discontinuities produce a power-law spectrum in the 'inertial subrange' with a spectral index near the Kolmogorov -5/3 index. The discontinuity spectrum contains about half of the power of the full solar-wind magnetic ﬁeld over this 'inertial subrange'. [@borovsky2010]

### Motivations

Studying the radial distribution of occurrence rate, as well as the properties of solar wind discontinuities may help answer the following questions:

-   How does the discontinuities change with the radial distance from the Sun?
-   How is solar wind discontinuities formed? What is the physical mechanisms?
    -   Generated at or near the sun?
    -   Locally generated in the interplanetary space by turbulence?

Joint observations of JUNO & ARTEMIS & Other missions really provides a unique opportunity!!!

-   Five-year cruise to Jupiter from 2011 to 2016
-   One earth flyby in 2013
-   Nearly the same Heliographic latitude as Earth

To eliminate the effect of the solar wind structure, we use data from other missions (mainly at 1AU) to provide a way of normalization.

| Mission       | r \[AU\]  | $\delta t_B$        | $\delta t_{plasma}$                  | Data availability         |
|---------------|---------------|---------------|---------------|---------------|
| JUNO          | 1-5.5     | 1s averaged (64 Hz) | 1h **model** [\*](#solar-wind-model) | **2011 - 2016** - Today   |
| ARTEMIS       | 1         | 1s averaged (8 Hz)  | 1h averaged                          | 2009 - Today (solar wind) |
| STEREO-A      | 1         | 1s averaged (8 Hz)  | 1h averaged                          | 2006 - Today              |
| STEREO-B      | 1         | 1s averaged (8 Hz)  | 1h averaged                          | 2006 - 2016.09            |
| Wind          | 1         | 11 Hz               | 1h averaged                          | 1994 - 2004 -2020 - Today |
| Solar Orbiter | 0.28-0.91 |                     |                                      | 2020 - Today              |
| Ulysis        |           |                     |                                      |                           |

## Methods

Traditional methods for ID identiﬁcation, such as the criteria of

-   Burlaga & Ness (1969; B-criterion) : a directional change of the magnetic ﬁeld larger than 30° during 60 s
-   Tsurutani & Smith (1979; TS-criterion) : $|ΔB|/|B| \geq 0.5$ within 3 minutes

Mostly rely on magnetic ﬁeld variations with a certain time lag. B-criterion has, as its main condition.

In their methods, the IDs below the thresholds are artiﬁcially abandoned. Therefore, identiﬁcation criteria may affect the statistical results, and there is likely to be a discrepancy between the ﬁndings via B-criterion and TS- criterion.

### ID identification (limited feature extraction / anomaly detection)

Liu's method : The first two conditions guarantee that the field changes of the IDs identiﬁed are large enough to be distinguished from the stochastic fluctuations on magnetic fields, while the third is a supplementary condition to reduce the uncertainty of recognition.

$$ \textrm{Index}_1 = \frac{\sigma(\vec{B})}{Max(\sigma(\vec{B}_-),\sigma(\vec{B}_+))} $$

$$ \textrm{Index}_2 = \frac{\sigma(\vec{B}_- + \vec{B}_+)} {\sigma(\vec{B}_-) + \sigma(\vec{B}_+)} $$

$$ \textrm{Index}_3 = \frac{| \Delta \vec{B} |}{|B_{bg}|} $$

$$ \textrm{Index}_1 \ge 2, \textrm{Index}_2 \ge 1, \textrm{Index}_3 \ge 0.1 $$

### Solar Wind Model {#solar-wind-model}

Sadly, JUNO does not provide plasma data during the cruise phase, so to estimate the plasma state we will use MHD model.

We are using [Michigan Solar WInd Model 2D (MSWIM2D)](http://csem.engin.umich.edu/MSWIM2D/), which models the solar wind propagation in 2D using the BATSRUS MHD solver. [@keebler2022]

Some key points about the model

-   Representing the solar wind in the ecliptic plane from 1 to 75 AU
-   2D MHD model, using the BATSRUS MHD solver
-   Inclusion of neutral hydrogen (important for the outer heliosphere)
-   Inner boundary is filled by time-shifting in situ data from multiple spacecraft

For model validation part, please see [JUNO Model Report](./analysis/20_model.ipynb).

## Conclusion

-   We have collected 5 years of solar wind discontinuities from JUNO, ARTEMIS and STEREO.
-   We have developed a pipeline to identify solar wind discontinuities. (Modular, Performant, Scalable)
-   The normalized occurrence rate of IDs drops with the radial distance from the Sun, following $1/r$ law.
-   The thickness of IDs increases with the radial distance from the Sun, but after normalization to ion inertial length, the thickness of IDs decreases.
-   The current intensity of IDs decrease with the radial distance from the Sun, but after normalization to the Alfven current , the current intensity of IDs increases.

## Conventions

As we are dealing with multiple spacecraft, we need to be careful about naming conventions. Here are the conventions we use in this project.

-   `sat_id`: name of the spacecraft. We also use abbreviation, for example
    -   `sta` for `STEREO-A`
    -   `thb` for `ARTEMIS-B`
-   `sat_state`: state data of the spacecraft
-   `b_vl`: maximum variance vector of the magnetic field, (major eigenvector)

Data Level

-   l0: unprocessed

-   l1: cleaned data, fill null value, add useful columns

-   l2: time-averaged data

### Columns naming conventions

-   `radial_distance`: radial distance of the spacecraft, in units of $AU$

-   `plasma_speed`: solar wind plasma speed, in units of $km/s$

-   `sw_elevation`: solar wind elevation angle, in units of $\degree$

-   `sw_azimuth`: solar wind azimuth angle, in units of $\degree$

-   `v_{x,y,z}` or `sw_vel_{X,Y,Z}`: solar wind plasma speed in the *ANY* coordinate system, in units of $km/s$

    -   `sw_vel_{r,t,n}`: solar wind plasma speed in the RTN coordinate system, in units of $km/s$
    -   `sw_vel_gse_{x,y,z}`: solar wind plasma speed in the GSE coordinate system, in units of $km/s$
    -   `sw_vel_lmn_{x,y,z}`: solar wind plasma speed in the LMN coordinate system, in units of $km/s$
        -   `v_l` or `sw_vel_l`: abbreviation for `sw_vel_lmn_1`
        -   `v_mn` or `sw_vel_mn` (deprecated)

-   `plasma_density`: plasma density, in units of $1/cm^{3}$

-   `plasma_temperature`: plasma temperature, in units of $K$

-   `B_{x,y,z}`: magnetic field in *ANY* coordinate system

    -   `b_rtn_{x,y,z}` or `b_{r,t,n}`: magnetic field in the RTN coordinate system
    -   `b_gse_{x,y,z}`: magnetic field in the GSE coordinate system

-   `B_mag`: magnetic field magnitude

-   `Vl_{x,y,z}` or `b_vecL_{X,Y,Z}`: maxium variance vector of the magnetic field in *ANY* coordinate system

    -   `b_vecL_{r,t,n}`: maxium variance vector of the magnetic field in the RTN coordinate system

-   `model_b_{r,t,n}`: modelled magnetic field in the RTN coordinate system

-   `state` : *1* for *solar wind*, *0* for *non-solar wind*

-   `L_mn{_norm}`: thickness of the current sheet in MN direction, in units of $km$

-   `j0{_norm}`: current density, in units of $nA/m^2$

Notes: we recommend use unique names for each variable, for example, `plasma_speed` instead of `speed`. Because it is easier to search and replace the variable names in the code whenever necessary.

For the unit, by default we use

-   length : $km$
-   time : $s$
-   magnetic field : $nT$
-   current : $nA/m^2$

## TODOs

Science part

-   Analysis
    -   [x] Check `STEREO-A` and `ARTEMIS-B` data
    -   [ ] Contribution of discontinuities to the power spectrum
    -   [ ] Check Datagap
    -   [ ] Check `ARTEMIS-B` data in different states (solar wind, magnetosheath, magnetotail, moon wake)
    -   [ ] Distribution of \|B\| over radius
    -   [ ] JUNO from 2012-09\~2012-10 lack of IDS and extreme large thickness
    -   [ ] Wind data
    -   [ ] Add error bar
    -   [ ] Validate the effects of calibrate candidate duration
    -   [ ] Validate model density with `Voyager`
-   Identifaction
    -   [ ] Ensemble forest?
    -   [ ] Smoothing is important?
    -   [ ] Check change point algorithm
-   Visualize data gaps
-   Features
    -   [ ] Thickness in N direction
    -   [ ] Use high resolution data for feature extraction
-   Compare with other methods of identifying IDs
    -   [ ] Verify with other methods of identifying IDs
-   [x] Incorporate solar wind propagation model
    -   [x] Verify with solar wind propagation model
        -   [x] Coordinate transformation

Code part

-   Optimization
    -   [ ] `JAX` library for `numpy` optimization
    -   [ ] shorten import time
-   Refactor
    -   [x] `process_candidates` to exclude `sat_state` logics
    -   [x] renaming feature layer `candidates`
-   [x] Kedro
    -   [x] Modular pipelines
    -   ~~Incorporate `lineapy`~~
-   [ ] QR codes

```{python}
%%markdown
python -X importtime -c 'from ids_finder.pipelines.juno.pipeline import download_juno_data, preprocess_jno' 2> import.log && tuna import.log

python -X importtime -c 'import ids_finder.utils.basic' 2> import.log && tuna import.log
```

### bugs

-   [ ] JUNO sw_temperature type
-   [ ] STEREO `B` less than zero (after downsampling?)